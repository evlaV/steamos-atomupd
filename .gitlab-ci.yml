# Copyright 2021-2022 Collabora Ltd
# SPDX-License-Identifier: MIT

workflow:
    rules:
        - if: $CI_COMMIT_TAG
        - if: $CI_COMMIT_BRANCH

stages:
    - lint
    - test
    - docker-prepare
    - docker-build

default:
  tags:
    - docker
    - linux

.test_template:
    stage: test
    needs: []
    tags:
        - docker
        - linux
    script:
        - meson setup _build/tests
        - meson compile -C _build/tests || ninja -C _build/tests
        - meson test -C _build/tests

    artifacts:
        paths:
            - _build/tests/meson-logs/*.txt
        when: always

.test_debian_template:
    extends: .test_template
    before_script:
    - sed -n '/^deb\s/s//deb-src /p' /etc/apt/sources.list > /etc/apt/sources.list.d/deb-src.list
    - apt-get update
    - apt-get install -y meson python3-flask python3-semantic-version
    - apt-get install -y git golang
    - apt-get build-dep -y rauc
    - ./build/build-deps.sh

.test_archlinux_template:
    extends: .test_template
    before_script:
        - pacman -Syu --needed --noconfirm --noprogressbar
          desync git json-glib meson python-flask
          python-semantic-version squashfs-tools

        # FIXME RAUC in the repositories is currently too old. Build it from
        # source until https://gitlab.steamos.cloud/holo/rauc/-/merge_requests/5
        # lands in Holo and Jupiter
        - STEAMOS_ATOMUPD_SKIP_DESYNC=1 ./build/build-deps.sh

test:debian-11:
    extends: .test_debian_template
    image: debian:bullseye-slim

test:jupiter:
    extends: .test_archlinux_template
    image: registry.gitlab.steamos.cloud/steam/steamos-docker-images/jupiter/base-devel:latest

test:holo:
    extends: .test_archlinux_template
    image: registry.gitlab.steamos.cloud/steam/steamos-docker-images/holo/base-devel:latest

.lint_template:
    stage: lint
    needs: [ ]
    image: archlinux:base-devel
    before_script:
        - pacman -Syu --needed --noconfirm --noprogressbar
          python-flask python-semantic-version python-pylint mypy

lint:pylint:
    extends: .lint_template
    script:
        - pylint steamosatomupd

lint:mypy:
    extends: .lint_template
    script:
        - mypy steamosatomupd

# We can't do this in the docker step because the kaniko executor
# doesn't have git, therefore no `git describe`
prepare:
    stage: docker-prepare
    image: debian:bullseye-slim
    script:
        - ci/prepare.sh > VERSION
    artifacts:
        paths:
            - VERSION

docker:
    stage: docker-build
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    needs:
        - prepare
    script:
        - sh ci/docker.sh

# vim:set sw=4 sts=4 et:
