# Copyright 2021 Collabora Ltd
# SPDX-License-Identifier: MIT

workflow:
    rules:
        - if: $CI_COMMIT_TAG
        - if: $CI_COMMIT_BRANCH

stages:
    - test
    - docker-prepare
    - docker-build

default:
  tags:
    - docker
    - linux

.test_template:
    stage: test
    needs: []
    tags:
        - docker
        - linux
    script:
        - meson setup _build/tests
        - meson compile -C _build/tests || ninja -C _build/tests
        - meson test -C _build/tests

    artifacts:
        paths:
            - _build/tests/meson-logs/*.txt
        when: always

.test_debian_template:
    extends: .test_template
    before_script:
    - |
        set -eux

        apt-get update
        apt-get install -y \
        meson python3-flask python3-semantic-version

.test_archlinux_template:
    extends: .test_template
    before_script:
    - |
        set -eux

        pacman -Syu --needed --noconfirm --noprogressbar \
        meson python-flask python-semantic-version

test:debian-10:
    extends: .test_debian_template
    image: debian:buster-slim

test:debian-11:
    extends: .test_debian_template
    image: debian:bullseye-slim

test:archlinux:
    extends: .test_archlinux_template
    image: archlinux:base-devel

# We can't do this in the docker step because the kaniko executor
# doesn't have git, therefore no `git describe`
prepare:
    stage: docker-prepare
    image: debian:bullseye-slim
    script:
        - ci/prepare.sh > VERSION
    artifacts:
        paths:
            - VERSION

docker:
    stage: docker-build
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    needs:
        - prepare
    script:
        - sh ci/docker.sh

# vim:set sw=4 sts=4 et:
